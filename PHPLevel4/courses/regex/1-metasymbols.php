<?php
/*
REGULAR EXPRESSION
==================
PCRE   - начинается с префиксом PREG_ [ например preg_match() ] рекомендуемый
POSIX  - начинается с префиксом EREG_ [ например ereg_match() ]

Начало + Конец [ regex ]
//
@@
#
##

preg_match('/./', 'hello', [, $array]);
===================
*/

// 1. проверяет совпасть или не совпало
preg_match('/./', 'hello');


/*
.+$^[]\{} - служебные метасимболы regex
*/


// 2. проверяем если часть тело совпало с опциональном параметром
preg_match('/./', 'hello', $matches);



// 3. экранирование строка
// /\.\+\$\^\[\]\\{\}/

// . Любая строка, которая нашел
preg_match('/./', 'hello', $matches);
echo $matches[0]; // h

// ? необязательно может быть символ
preg_match('/PHP.?5/', 'PHP 5', $matches);
echo $matches[0]; // Совпадение и со строкой PHP5, и со строкой PHP 5

// + минимум один символ
// должно совпасть минимум один "a" а потом b
preg_match('/a+b/', 'caaabc', $matches);
echo $matches[0]; // => aaab


// * либо нет вообще или до бесконечности [сколько угодно много раз или вообще может не быть]
// '/de*f/' будут соответствовать строки 'df', 'def', 'deeeeef'



// Указать более точнее
// {m}
// {m,n}
// {m,}

// tre{1,2}f    - говорить что должно быть 'tree' либо 1 или 2 в строке ('tref', 'treef', но не 'treeef')
// a{2}         - говорить что должно идти 'a' ровно 2 раза в строке
// fo{2,}       - говорить что должно идти 'o' минимум 2 раза и максимум неограниченно в строке 'foo', 'fooooooo....'
// fo{2,}ba{2}r - говорить что должно идти 'o' минимум 2 раза и максимум неограниченно в строке +
// говорить что должно идти 'a' ровно 2 раза в строке
// соответствуют 'foobaar', 'fooooooooooobaar' и 'fooobaar', но не 'fobaaar'


// ^ : начало строки, должно начинаться с "какой-то строки" перед ним не должно быть ничего
// '/^ghi/' - соответствуют 'ghik' и 'ghi', но не 'fghi'


// Example:
$string = 'fghghabchjklhjkl';

preg_match('/abc', $string, $matches);
echo $matches[0]; // fghghabchjklhjkl потому что есть "abc" в строке

$string = 'abchjklhjkl';

preg_match('/^abc', $string, $matches);
echo $matches[0]; // abchjklhjkl потому что строка начинается с "abc"



// $ : конец строка, должно заканчиваться с "какой-то строки" после этого не должно быть ничего
// '/John$/' соответствуют "Mike, John" и "Mike,John\n", но не "John Smith"


// '/^John$' ничего не должно быть перед "John" и после конец "John" значит ищем только "John"
