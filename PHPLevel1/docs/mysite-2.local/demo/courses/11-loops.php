<?php

// Циклы (LOOP)
// позволяет повторить одно и тоже действия N количество раз
/*
Операторы инкремента и декремента
Цикл for
Цикл while
Цикл do-while
Управление циклами break; continue
Цикл foreach
*/

/*
Операторы инкремента и декремента
*/

// Постфиксный инкремент
$x = 1;
echo "Должно быть 1: ". $x++;
echo "Должно быть 2: ". $x;

// Что и
echo "Должно быть 1: $x"; $x += 1;


// Префиксный инкремент
$x = 1;
echo "Должно быть 2: ". ++$x;
echo "Должно быть 2: ". $x;


// Что и
$x += 1; echo "Должно быть 2: $x";


// Примеры
// 1. Унарный оператор (Постфиксный переменный)
$i = 1;
$i++;
$i += 1;
$i = $i + 1;
echo $i;


// 2. Унарный оператор (Префиксный переменный)
$i = 1;
++$i;
echo $i;


//
$x = 1;
echo "Должно быть 1: ". $x++;
echo "Должно быть 1: $x"; $x += 1;
echo "Должно быть 2: ". $x;

$x = 2;
echo "Должно быть 2: ". ++$x;
$x +=2; echo "Должно быть 2: $x";
echo "Должно быть 2: ". $x;
echo "Должно быть 2: $x";

## ++$i быстрее чем $i++
## --$i быстрее чем $i--


# 1. Цикл: FOR (КАЖДЫЙ)
// ИСПОЛЬЗУЕТСЯ КОГДА ИЗВЕСТНО КОНЕЧНЫЙ ИТЕРАЦИИ
// бесконечный цикл
// for (;;);
// for (A; B; C);
// for (; B; C);
// A : это счетчик итерации цикл, часть исполняется один раз
// B : это условие, это как IF
// C : это часть который исполняется каждый раз после инструкции и потом переходить B


// $i : это как счетчик
// Завершим 5 итерации цикл
// for ($i = 0; $i <= 5; $i++) echo "$i <br>";

for ($i = 1; $i <= 5; $i++) {
   echo "$i\n";
}

for ($i = 1; $i <= 5; $i++):
    echo "$i\n";
endfor;


$i = 1;
for (; $i <= 5; $i++):
    echo "$i\n";
endfor;

$i = 1;
for (; $i <= 5;):
    echo $i++;
endfor;



# 2. Цикл: WHILE (ПОКА) WHILE PRE УСЛОВИЕ
// ИСПОЛЬЗУЕТСЯ КОГДА НЕИЗВЕСТНО КОНЕЧНЫЙ ИТЕРАЦИИ
// ПОКА УСЛОВИЕ НЕ ВЫПОЛНЯЕТСЯ НИЧЕГО НЕ СДЕЛАЕТ
// while (true);

$i = 1;
while ($i <= 5) {
    echo $i;
    $i++;
}

while ($i <= 5):
    echo $i;
    $i++;
endwhile;

while ($i <= 5):
    echo $i++;
endwhile;

while ($i <= 5) {
    echo ++$i;
}

/*
1
2
3
4
5
*/

/*
$i = 1;
for (; $i <= 5; $i++):
    echo "$i\n";
endfor;

while ($i <= 5):
    echo $i++;
endwhile;
*/



# 3. Цикл: DO-WHILE (ПОКА) WHILE ПОСТ УСЛОВИЕ
// ВСЕГДА ИСПОЛЬНЯЕТ ОДНУ ИНСТРУКЦИЮ И ПРОВЕРЯЕТ УСЛОВИЕ

$i = 100;

do {
    echo $i++;
} while ($i <= 10);


do {
    echo "Доброе пожаловать в игру";
    if ($i == 200) {
       echo "Поздравляю вас за то что выиграли на конкурс программирование на PHP";
    }
    echo $i++;
} while ($i <= 10);


// Управление циклами
# Прерывание цикла
// ОН ПРЕРЫВАЕТ ПОЛНОСТЬЮ ЦИКЛ ОПЕРАЦИИ
$i = 1;
while ($i <= 10) {
    echo $i++;
    if ($i == 5) {
        break; // тоже же самое писать break 1; останавливаем 1 (первый цикл итерации)
    }
}

/*
КАК ТОЛЬКО $i = 5 выводим из цикла
1
2
3
4
*/


# Продолжение цикла
// ОН ПРЕРЫВАЕТ ТЕКУЩИЙ ЦИКЛ ОПЕРАЦИИ
$i = 0;
while ($i <= 9) {
    echo $i++;
    if ($i == 5) {
        continue; // то же самое писать continue 1; продолжаем 1 (первый цикл итерации)
    }
    echo $i;
}

/*
Всё кроме 5
0
1
2
3
4
6
7
8
9
*/

// Управление вложенными циклами
$i = 1; $j = 1;

while ($j <= 10) {
    while ($i <= 10) {
       echo $i++;
       if ($i == 5)
           break 2; // останавливаем (2) второй цикл
    }
    $j++;
}


$i = 1; $j = 1;

while ($j <= 10) {
    while ($i <= 10) {
        echo $i++;
        if ($i == 5)
            continue 2; // останавливаем (2) второй цикл
    }
    $j++;
}